@babel/preset-env: `DEBUG` option

Using targets:
{
  "chrome": "55"
}

Using modules transform: auto

Using plugins:
  transform-duplicate-named-capturing-groups-regex { chrome < 126 }
  transform-regexp-modifiers { chrome < 125 }
  transform-unicode-sets-regex { chrome < 112 }
  transform-class-static-block { chrome < 94 }
  transform-private-property-in-object { chrome < 91 }
  transform-class-properties { chrome < 74 }
  transform-private-methods { chrome < 84 }
  transform-numeric-separator { chrome < 75 }
  transform-logical-assignment-operators { chrome < 85 }
  transform-nullish-coalescing-operator { chrome < 80 }
  transform-optional-chaining { chrome < 80 }
  transform-json-strings { chrome < 66 }
  transform-optional-catch-binding { chrome < 66 }
  transform-async-generator-functions { chrome < 63 }
  transform-object-rest-spread { chrome < 60 }
  transform-dotall-regex { chrome < 62 }
  transform-unicode-property-regex { chrome < 64 }
  transform-named-capturing-groups-regex { chrome < 64 }
  transform-export-namespace-from { chrome < 72 }
  transform-modules-commonjs
  transform-dynamic-import
corejs3: `DEBUG` option

Using targets: {
  "chrome": "55"
}

Using polyfills with `usage-global` method:

[<CWD>/packages/babel-preset-env/test/fixtures/debug/usage-corejs3-with-import/input.mjs]
Based on your code and targets, the corejs3 polyfill did not add any polyfill.
