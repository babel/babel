function _regenerator() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = Object.prototype, n = r.hasOwnProperty, o = "function" == typeof Symbol ? Symbol : {}, i = o.iterator || "@@iterator", a = o.toStringTag || "@@toStringTag", u = ["next", "throw", "return"]; function f(r, n, o, i) { var a = n && n.prototype instanceof Generator ? n : Generator, f = Object.create(a.prototype); return _regeneratorDefine(f, "_invoke", function (r, n, o) { var i, a, f, p = 1, s = o || [], d = !1, l = 0, y = { prev: 0, next: 0, sent: e, stop: v, abrupt: h, finish: G, delegateYield: function (t, r) { return a = _regeneratorValues(t), f = e, y.next = r, c; } }; function v() { return d = !0, i; } function G(t) { for (var r = s.length - 1; !d && 1 !== p && r >= 0; --r) { var n = s[r], o = y.prev, i = n[1], a = n[2]; if (this && a === t) return l = n[4] || 3, f = n[5] === e ? n[3] : n[5], n[4] = 3, n[5] = e, c; if (n[0] <= o) { if (o < i) return l = 0, y.sent = t, void (y.next = i); if (o < a) return n[4] = 1, n[5] = t, void (y.next = a); } } throw p = 4, t; } function h(e, t) { l = e, f = t; for (var r = s.length - 1; r >= 0; --r) { var n = s[r]; if (n[0] <= y.prev && y.prev < n[2] && !(3 === e && n[0] <= t && t <= n[2])) { var o = n; o[4] = e, o[5] = t, l = 0, y.next = o[2]; break; } } return c; } return function (o, s, g) { if (3 === p) throw Error("Generator is already running"); if (4 === p) { if (1 === s) throw g; return { value: e, done: !0 }; } for (l = s, f = g;;) { a || (0 === l ? y.sent = f : 1 === l ? G(f) : 2 === l ? (i = f, y.next = -1, h(2, f)) : y.next = f); try { if (a) { if (t = a[u[l]]) { if (t = t.call(a, f)) { if (!t) throw TypeError("iterator result is not an object"); if (!t.done) return t; 2 !== l && (l = 0, f = t.value); } } else 1 === l && (t = a.return) && t.call(a), 2 !== l && (f = TypeError("The iterator does not provide a '" + u[l = 1] + "' method")); a = e; } else if (p = 3, t = (-1 === y.next ? v : r).call(n, y), p = d ? 4 : 2, t !== c) return { value: t, done: d }; } catch (t) { p = 4, a = e, l = 1, f = t; } } }; }(r, o, i), !0), f; } var c = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; _regeneratorDefine(p, i, function () { return this; }); var s = Object.getPrototypeOf, d = s && s(s(_regeneratorValues([]))); d && d !== r && n.call(d, i) && (p = d); var l = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function y(e) { return Object.setPrototypeOf ? Object.setPrototypeOf(e, GeneratorFunctionPrototype) : (e.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine(e, a, "GeneratorFunction")), e.prototype = Object.create(l), e; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine(l, "constructor", GeneratorFunctionPrototype), _regeneratorDefine(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = _regeneratorDefine(GeneratorFunctionPrototype, a, "GeneratorFunction"), _regeneratorDefineIM(l), _regeneratorDefine(l, a, "Generator"), _regeneratorDefine(l, i, function () { return this; }), _regeneratorDefine(l, "toString", function () { return "[object Generator]"; }), (_regenerator = function () { return { w: f, m: y }; })(); }
function _regeneratorValues(e) { if (null != e) { var r = e["function" == typeof Symbol && Symbol.iterator || "@iterator"]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var t = -1, n = function r() { for (; ++t < e.length;) if ({}.hasOwnProperty.call(e, t)) return r.value = e[t], r.done = !1, r; return r.value = void 0, r.done = !0, r; }; return n.next = n; } } throw new TypeError(typeof e + " is not iterable"); }
function _regeneratorDefineIM(e) { function n(n, t) { _regeneratorDefine(e, n, function (e) { return this._invoke(n, t, e); }); } n("next", 0), n("throw", 1), n("return", 2); }
function _regeneratorDefine(e, r, n, t) { _regeneratorDefine = function (e, r, n, t) { return Object.defineProperty(e, r, { value: n, enumerable: !t, configurable: !t, writable: !t }); }; try { _regeneratorDefine({}, ""); } catch (e) { _regeneratorDefine = function (e, r, n) { return e[r] = n; }; } return _regeneratorDefine(e, r, n, t); }
var _marked = /*#__PURE__*/_regenerator().m(f);
function f() {
  return _regenerator().w(function (_context) {
    while (1) switch (_context.prev = _context.next) {
      case 0:
        return _context.stop();
    }
  }, _marked);
}
